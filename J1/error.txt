PLY: PARSE DEBUG START

State  : 0
Stack  : . LexToken(PACKAGE,'package',1,0)
Action : Shift and goto state 7

State  : 7
Stack  : PACKAGE . LexToken(IDENTIFIER,'project',1,8)
Action : Shift and goto state 39

State  : 39
Stack  : PACKAGE IDENTIFIER . LexToken(POINT,'.',1,15)
Action : Reduce rule [Identifier -> IDENTIFIER] with ['project'] and goto state 38
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 38
Stack  : PACKAGE Identifier . LexToken(POINT,'.',1,15)
Action : Reduce rule [SimpleName -> Identifier] with [None] and goto state 36
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 36
Stack  : PACKAGE SimpleName . LexToken(POINT,'.',1,15)
Action : Reduce rule [Name -> SimpleName] with [None] and goto state 35
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 35
Stack  : PACKAGE Name . LexToken(POINT,'.',1,15)
Action : Shift and goto state 48

State  : 48
Stack  : PACKAGE Name POINT . LexToken(IDENTIFIER,'unittests',1,16)
Action : Shift and goto state 39

State  : 39
Stack  : PACKAGE Name POINT IDENTIFIER . LexToken(SCOLON,';',1,25)
Action : Reduce rule [Identifier -> IDENTIFIER] with ['unittests'] and goto state 63
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 63
Stack  : PACKAGE Name POINT Identifier . LexToken(SCOLON,';',1,25)
Action : Reduce rule [QualifiedName -> Name POINT Identifier] with [None,'.',None] and goto state 37
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 37
Stack  : PACKAGE QualifiedName . LexToken(SCOLON,';',1,25)
Action : Reduce rule [Name -> QualifiedName] with [None] and goto state 35
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 35
Stack  : PACKAGE Name . LexToken(SCOLON,';',1,25)
Action : Shift and goto state 47

State  : 47
Stack  : PACKAGE Name SCOLON . LexToken(PUBLIC,'public',3,28)
Action : Reduce rule [PackageDeclaration -> PACKAGE Name SCOLON] with ['package',None,';'] and goto state 3
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 3
Stack  : PackageDeclaration . LexToken(PUBLIC,'public',3,28)
Action : Shift and goto state 20

State  : 20
Stack  : PackageDeclaration PUBLIC . LexToken(CLASS,'class',3,35)
Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 19
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 19
Stack  : PackageDeclaration Modifier . LexToken(CLASS,'class',3,35)
Action : Reduce rule [Modifiers -> Modifier] with [None] and goto state 16
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 16
Stack  : PackageDeclaration Modifiers . LexToken(CLASS,'class',3,35)
Action : Shift and goto state 41

State  : 41
Stack  : PackageDeclaration Modifiers CLASS . LexToken(IDENTIFIER,'BinarySearch',3,41)
Action : Shift and goto state 39

State  : 39
Stack  : PackageDeclaration Modifiers CLASS IDENTIFIER . LexToken(LCURL,'{',3,54)
Action : Reduce rule [Identifier -> IDENTIFIER] with ['BinarySearch'] and goto state 51
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 51
Stack  : PackageDeclaration Modifiers CLASS Identifier . LexToken(LCURL,'{',3,54)
Action : Shift and goto state 58

State  : 58
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL . LexToken(PUBLIC,'public',4,60)
Action : Shift and goto state 20

State  : 20
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL PUBLIC . LexToken(STATIC,'static',4,67)
Action : Reduce rule [Modifier -> PUBLIC] with ['public'] and goto state 19
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 19
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifier . LexToken(STATIC,'static',4,67)
Action : Reduce rule [Modifiers -> Modifier] with [None] and goto state 89
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 89
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers . LexToken(STATIC,'static',4,67)
Action : Shift and goto state 23

State  : 23
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers STATIC . LexToken(VOID,'void',4,74)
Action : Reduce rule [Modifier -> STATIC] with ['static'] and goto state 43
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 43
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers Modifier . LexToken(VOID,'void',4,74)
Action : Reduce rule [Modifiers -> Modifiers Modifier] with [None,None] and goto state 89
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 89
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers . LexToken(VOID,'void',4,74)
Action : Shift and goto state 138

State  : 138
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID . LexToken(IDENTIFIER,'main',4,79)
Action : Shift and goto state 39

State  : 39
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID IDENTIFIER . LexToken(LPAR,'(',4,83)
Action : Reduce rule [Identifier -> IDENTIFIER] with ['main'] and goto state 150
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 150
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID Identifier . LexToken(LPAR,'(',4,83)
Action : Shift and goto state 251

State  : 251
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID Identifier LPAR . LexToken(FINAL,'final',4,84)
ERROR: Error  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID Identifier LPAR . LexToken(FINAL,'final',4,84)

State  : 251
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID Identifier LPAR . error
ERROR: Error  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID Identifier LPAR . error

State  : 150
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID Identifier . error
ERROR: Error  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID Identifier . error

State  : 138
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID . error
ERROR: Error  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers VOID . error

State  : 89
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers . error
ERROR: Error  : PackageDeclaration Modifiers CLASS Identifier LCURL Modifiers . error

State  : 58
Stack  : PackageDeclaration Modifiers CLASS Identifier LCURL . error
ERROR: Error  : PackageDeclaration Modifiers CLASS Identifier LCURL . error

State  : 51
Stack  : PackageDeclaration Modifiers CLASS Identifier . error
ERROR: Error  : PackageDeclaration Modifiers CLASS Identifier . error

State  : 41
Stack  : PackageDeclaration Modifiers CLASS . error
ERROR: Error  : PackageDeclaration Modifiers CLASS . error

State  : 16
Stack  : PackageDeclaration Modifiers . error
ERROR: Error  : PackageDeclaration Modifiers . error

State  : 3
Stack  : PackageDeclaration . error
ERROR: Error  : PackageDeclaration . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(IDENTIFIER,'String',4,90)
ERROR: Error  : . LexToken(IDENTIFIER,'String',4,90)

State  : 0
Stack  : . LexToken(IDENTIFIER,'args',4,97)
ERROR: Error  : . LexToken(IDENTIFIER,'args',4,97)

State  : 0
Stack  : . LexToken(LSQR,'[',4,101)
ERROR: Error  : . LexToken(LSQR,'[',4,101)

State  : 0
Stack  : . LexToken(RSQR,']',4,102)
ERROR: Error  : . LexToken(RSQR,']',4,102)

State  : 0
Stack  : . LexToken(RPAR,')',4,103)
ERROR: Error  : . LexToken(RPAR,')',4,103)

State  : 0
Stack  : . LexToken(LCURL,'{',4,105)
ERROR: Error  : . LexToken(LCURL,'{',4,105)

State  : 0
Stack  : . LexToken(INT,'int',5,115)
ERROR: Error  : . LexToken(INT,'int',5,115)

State  : 0
Stack  : . LexToken(IDENTIFIER,'c',5,119)
ERROR: Error  : . LexToken(IDENTIFIER,'c',5,119)

State  : 0
Stack  : . LexToken(COMMA,',',5,120)
ERROR: Error  : . LexToken(COMMA,',',5,120)

State  : 0
Stack  : . LexToken(IDENTIFIER,'first',5,122)
ERROR: Error  : . LexToken(IDENTIFIER,'first',5,122)

State  : 0
Stack  : . LexToken(COMMA,',',5,127)
ERROR: Error  : . LexToken(COMMA,',',5,127)

State  : 0
Stack  : . LexToken(IDENTIFIER,'last',5,129)
ERROR: Error  : . LexToken(IDENTIFIER,'last',5,129)

State  : 0
Stack  : . LexToken(COMMA,',',5,133)
ERROR: Error  : . LexToken(COMMA,',',5,133)

State  : 0
Stack  : . LexToken(IDENTIFIER,'middle',5,135)
ERROR: Error  : . LexToken(IDENTIFIER,'middle',5,135)

State  : 0
Stack  : . LexToken(SCOLON,';',5,141)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(INT,'int',6,151)
ERROR: Error  : SCOLON . LexToken(INT,'int',6,151)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(LSQR,'[',6,154)
ERROR: Error  : . LexToken(LSQR,'[',6,154)

State  : 0
Stack  : . LexToken(RSQR,']',6,155)
ERROR: Error  : . LexToken(RSQR,']',6,155)

State  : 0
Stack  : . LexToken(IDENTIFIER,'array',6,157)
ERROR: Error  : . LexToken(IDENTIFIER,'array',6,157)

State  : 0
Stack  : . LexToken(EQ,'=',6,163)
ERROR: Error  : . LexToken(EQ,'=',6,163)

State  : 0
Stack  : . LexToken(NEW,'new',6,165)
ERROR: Error  : . LexToken(NEW,'new',6,165)

State  : 0
Stack  : . LexToken(INT,'int',6,169)
ERROR: Error  : . LexToken(INT,'int',6,169)

State  : 0
Stack  : . LexToken(LSQR,'[',6,172)
ERROR: Error  : . LexToken(LSQR,'[',6,172)

State  : 0
Stack  : . LexToken(RSQR,']',6,173)
ERROR: Error  : . LexToken(RSQR,']',6,173)

State  : 0
Stack  : . LexToken(LCURL,'{',6,175)
ERROR: Error  : . LexToken(LCURL,'{',6,175)

State  : 0
Stack  : . LexToken(INTVAL,'1',6,177)
ERROR: Error  : . LexToken(INTVAL,'1',6,177)

State  : 0
Stack  : . LexToken(COMMA,',',6,178)
ERROR: Error  : . LexToken(COMMA,',',6,178)

State  : 0
Stack  : . LexToken(INTVAL,'2',6,180)
ERROR: Error  : . LexToken(INTVAL,'2',6,180)

State  : 0
Stack  : . LexToken(COMMA,',',6,181)
ERROR: Error  : . LexToken(COMMA,',',6,181)

State  : 0
Stack  : . LexToken(INTVAL,'3',6,183)
ERROR: Error  : . LexToken(INTVAL,'3',6,183)

State  : 0
Stack  : . LexToken(COMMA,',',6,184)
ERROR: Error  : . LexToken(COMMA,',',6,184)

State  : 0
Stack  : . LexToken(INTVAL,'4',6,186)
ERROR: Error  : . LexToken(INTVAL,'4',6,186)

State  : 0
Stack  : . LexToken(COMMA,',',6,187)
ERROR: Error  : . LexToken(COMMA,',',6,187)

State  : 0
Stack  : . LexToken(INTVAL,'5',6,189)
ERROR: Error  : . LexToken(INTVAL,'5',6,189)

State  : 0
Stack  : . LexToken(COMMA,',',6,190)
ERROR: Error  : . LexToken(COMMA,',',6,190)

State  : 0
Stack  : . LexToken(INTVAL,'6',6,192)
ERROR: Error  : . LexToken(INTVAL,'6',6,192)

State  : 0
Stack  : . LexToken(COMMA,',',6,193)
ERROR: Error  : . LexToken(COMMA,',',6,193)

State  : 0
Stack  : . LexToken(INTVAL,'7',6,195)
ERROR: Error  : . LexToken(INTVAL,'7',6,195)

State  : 0
Stack  : . LexToken(COMMA,',',6,196)
ERROR: Error  : . LexToken(COMMA,',',6,196)

State  : 0
Stack  : . LexToken(INTVAL,'8',6,198)
ERROR: Error  : . LexToken(INTVAL,'8',6,198)

State  : 0
Stack  : . LexToken(RCURL,'}',6,200)
ERROR: Error  : . LexToken(RCURL,'}',6,200)

State  : 0
Stack  : . LexToken(SCOLON,';',6,201)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(FOR,'for',8,212)
ERROR: Error  : SCOLON . LexToken(FOR,'for',8,212)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(LPAR,'(',8,216)
ERROR: Error  : . LexToken(LPAR,'(',8,216)

State  : 0
Stack  : . LexToken(IDENTIFIER,'c',8,217)
ERROR: Error  : . LexToken(IDENTIFIER,'c',8,217)

State  : 0
Stack  : . LexToken(EQ,'=',8,219)
ERROR: Error  : . LexToken(EQ,'=',8,219)

State  : 0
Stack  : . LexToken(INTVAL,'0',8,221)
ERROR: Error  : . LexToken(INTVAL,'0',8,221)

State  : 0
Stack  : . LexToken(SCOLON,';',8,222)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(IDENTIFIER,'c',8,224)
ERROR: Error  : SCOLON . LexToken(IDENTIFIER,'c',8,224)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(LETHAN,'<',8,226)
ERROR: Error  : . LexToken(LETHAN,'<',8,226)

State  : 0
Stack  : . LexToken(IDENTIFIER,'array',8,228)
ERROR: Error  : . LexToken(IDENTIFIER,'array',8,228)

State  : 0
Stack  : . LexToken(POINT,'.',8,233)
ERROR: Error  : . LexToken(POINT,'.',8,233)

State  : 0
Stack  : . LexToken(IDENTIFIER,'length',8,234)
ERROR: Error  : . LexToken(IDENTIFIER,'length',8,234)

State  : 0
Stack  : . LexToken(SCOLON,';',8,240)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(IDENTIFIER,'c',8,242)
ERROR: Error  : SCOLON . LexToken(IDENTIFIER,'c',8,242)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(DPLUS,'++',8,243)
ERROR: Error  : . LexToken(DPLUS,'++',8,243)

State  : 0
Stack  : . LexToken(RPAR,')',8,245)
ERROR: Error  : . LexToken(RPAR,')',8,245)

State  : 0
Stack  : . LexToken(LCURL,'{',8,247)
ERROR: Error  : . LexToken(LCURL,'{',8,247)

State  : 0
Stack  : . LexToken(IDENTIFIER,'System',9,261)
ERROR: Error  : . LexToken(IDENTIFIER,'System',9,261)

State  : 0
Stack  : . LexToken(POINT,'.',9,267)
ERROR: Error  : . LexToken(POINT,'.',9,267)

State  : 0
Stack  : . LexToken(IDENTIFIER,'out',9,268)
ERROR: Error  : . LexToken(IDENTIFIER,'out',9,268)

State  : 0
Stack  : . LexToken(POINT,'.',9,271)
ERROR: Error  : . LexToken(POINT,'.',9,271)

State  : 0
Stack  : . LexToken(IDENTIFIER,'println',9,272)
ERROR: Error  : . LexToken(IDENTIFIER,'println',9,272)

State  : 0
Stack  : . LexToken(LPAR,'(',9,279)
ERROR: Error  : . LexToken(LPAR,'(',9,279)

State  : 0
Stack  : . LexToken(IDENTIFIER,'array',9,280)
ERROR: Error  : . LexToken(IDENTIFIER,'array',9,280)

State  : 0
Stack  : . LexToken(LSQR,'[',9,285)
ERROR: Error  : . LexToken(LSQR,'[',9,285)

State  : 0
Stack  : . LexToken(IDENTIFIER,'c',9,286)
ERROR: Error  : . LexToken(IDENTIFIER,'c',9,286)

State  : 0
Stack  : . LexToken(RSQR,']',9,287)
ERROR: Error  : . LexToken(RSQR,']',9,287)

State  : 0
Stack  : . LexToken(RPAR,')',9,288)
ERROR: Error  : . LexToken(RPAR,')',9,288)

State  : 0
Stack  : . LexToken(SCOLON,';',9,289)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(RCURL,'}',10,299)
ERROR: Error  : SCOLON . LexToken(RCURL,'}',10,299)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(INT,'int',12,310)
ERROR: Error  : . LexToken(INT,'int',12,310)

State  : 0
Stack  : . LexToken(IDENTIFIER,'search',12,314)
ERROR: Error  : . LexToken(IDENTIFIER,'search',12,314)

State  : 0
Stack  : . LexToken(EQ,'=',12,321)
ERROR: Error  : . LexToken(EQ,'=',12,321)

State  : 0
Stack  : . LexToken(INTVAL,'7',12,323)
ERROR: Error  : . LexToken(INTVAL,'7',12,323)

State  : 0
Stack  : . LexToken(SCOLON,';',12,324)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(IDENTIFIER,'first',13,334)
ERROR: Error  : SCOLON . LexToken(IDENTIFIER,'first',13,334)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(EQ,'=',13,340)
ERROR: Error  : . LexToken(EQ,'=',13,340)

State  : 0
Stack  : . LexToken(INTVAL,'0',13,342)
ERROR: Error  : . LexToken(INTVAL,'0',13,342)

State  : 0
Stack  : . LexToken(SCOLON,';',13,343)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(IDENTIFIER,'last',14,353)
ERROR: Error  : SCOLON . LexToken(IDENTIFIER,'last',14,353)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(EQ,'=',14,358)
ERROR: Error  : . LexToken(EQ,'=',14,358)

State  : 0
Stack  : . LexToken(IDENTIFIER,'array',14,360)
ERROR: Error  : . LexToken(IDENTIFIER,'array',14,360)

State  : 0
Stack  : . LexToken(POINT,'.',14,365)
ERROR: Error  : . LexToken(POINT,'.',14,365)

State  : 0
Stack  : . LexToken(IDENTIFIER,'length',14,366)
ERROR: Error  : . LexToken(IDENTIFIER,'length',14,366)

State  : 0
Stack  : . LexToken(MINUS,'-',14,373)
ERROR: Error  : . LexToken(MINUS,'-',14,373)

State  : 0
Stack  : . LexToken(INTVAL,'1',14,375)
ERROR: Error  : . LexToken(INTVAL,'1',14,375)

State  : 0
Stack  : . LexToken(SCOLON,';',14,376)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(IDENTIFIER,'middle',15,386)
ERROR: Error  : SCOLON . LexToken(IDENTIFIER,'middle',15,386)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(EQ,'=',15,393)
ERROR: Error  : . LexToken(EQ,'=',15,393)

State  : 0
Stack  : . LexToken(LPAR,'(',15,395)
ERROR: Error  : . LexToken(LPAR,'(',15,395)

State  : 0
Stack  : . LexToken(IDENTIFIER,'first',15,396)
ERROR: Error  : . LexToken(IDENTIFIER,'first',15,396)

State  : 0
Stack  : . LexToken(PLUS,'+',15,402)
ERROR: Error  : . LexToken(PLUS,'+',15,402)

State  : 0
Stack  : . LexToken(IDENTIFIER,'last',15,404)
ERROR: Error  : . LexToken(IDENTIFIER,'last',15,404)

State  : 0
Stack  : . LexToken(RPAR,')',15,408)
ERROR: Error  : . LexToken(RPAR,')',15,408)

State  : 0
Stack  : . LexToken(FSLASH,'/',15,410)
ERROR: Error  : . LexToken(FSLASH,'/',15,410)

State  : 0
Stack  : . LexToken(INTVAL,'2',15,412)
ERROR: Error  : . LexToken(INTVAL,'2',15,412)

State  : 0
Stack  : . LexToken(SCOLON,';',15,413)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(WHILE,'while',17,424)
ERROR: Error  : SCOLON . LexToken(WHILE,'while',17,424)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(LPAR,'(',17,430)
ERROR: Error  : . LexToken(LPAR,'(',17,430)

State  : 0
Stack  : . LexToken(IDENTIFIER,'first',17,431)
ERROR: Error  : . LexToken(IDENTIFIER,'first',17,431)

State  : 0
Stack  : . LexToken(LEEQ,'<=',17,437)
ERROR: Error  : . LexToken(LEEQ,'<=',17,437)

State  : 0
Stack  : . LexToken(IDENTIFIER,'last',17,440)
ERROR: Error  : . LexToken(IDENTIFIER,'last',17,440)

State  : 0
Stack  : . LexToken(RPAR,')',17,444)
ERROR: Error  : . LexToken(RPAR,')',17,444)

State  : 0
Stack  : . LexToken(LCURL,'{',17,446)
ERROR: Error  : . LexToken(LCURL,'{',17,446)

State  : 0
Stack  : . LexToken(IF,'if',18,460)
ERROR: Error  : . LexToken(IF,'if',18,460)

State  : 0
Stack  : . LexToken(LPAR,'(',18,463)
ERROR: Error  : . LexToken(LPAR,'(',18,463)

State  : 0
Stack  : . LexToken(IDENTIFIER,'array',18,464)
ERROR: Error  : . LexToken(IDENTIFIER,'array',18,464)

State  : 0
Stack  : . LexToken(LSQR,'[',18,469)
ERROR: Error  : . LexToken(LSQR,'[',18,469)

State  : 0
Stack  : . LexToken(IDENTIFIER,'middle',18,470)
ERROR: Error  : . LexToken(IDENTIFIER,'middle',18,470)

State  : 0
Stack  : . LexToken(RSQR,']',18,476)
ERROR: Error  : . LexToken(RSQR,']',18,476)

State  : 0
Stack  : . LexToken(LETHAN,'<',18,478)
ERROR: Error  : . LexToken(LETHAN,'<',18,478)

State  : 0
Stack  : . LexToken(IDENTIFIER,'search',18,480)
ERROR: Error  : . LexToken(IDENTIFIER,'search',18,480)

State  : 0
Stack  : . LexToken(RPAR,')',18,486)
ERROR: Error  : . LexToken(RPAR,')',18,486)

State  : 0
Stack  : . LexToken(IDENTIFIER,'first',19,504)
ERROR: Error  : . LexToken(IDENTIFIER,'first',19,504)

State  : 0
Stack  : . LexToken(EQ,'=',19,510)
ERROR: Error  : . LexToken(EQ,'=',19,510)

State  : 0
Stack  : . LexToken(IDENTIFIER,'middle',19,512)
ERROR: Error  : . LexToken(IDENTIFIER,'middle',19,512)

State  : 0
Stack  : . LexToken(PLUS,'+',19,519)
ERROR: Error  : . LexToken(PLUS,'+',19,519)

State  : 0
Stack  : . LexToken(INTVAL,'1',19,521)
ERROR: Error  : . LexToken(INTVAL,'1',19,521)

State  : 0
Stack  : . LexToken(SCOLON,';',19,522)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(ELSE,'else',20,536)
ERROR: Error  : SCOLON . LexToken(ELSE,'else',20,536)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(IF,'if',20,541)
ERROR: Error  : . LexToken(IF,'if',20,541)

State  : 0
Stack  : . LexToken(LPAR,'(',20,544)
ERROR: Error  : . LexToken(LPAR,'(',20,544)

State  : 0
Stack  : . LexToken(IDENTIFIER,'array',20,545)
ERROR: Error  : . LexToken(IDENTIFIER,'array',20,545)

State  : 0
Stack  : . LexToken(LSQR,'[',20,550)
ERROR: Error  : . LexToken(LSQR,'[',20,550)

State  : 0
Stack  : . LexToken(IDENTIFIER,'middle',20,551)
ERROR: Error  : . LexToken(IDENTIFIER,'middle',20,551)

State  : 0
Stack  : . LexToken(RSQR,']',20,557)
ERROR: Error  : . LexToken(RSQR,']',20,557)

State  : 0
Stack  : . LexToken(DEQ,'==',20,559)
ERROR: Error  : . LexToken(DEQ,'==',20,559)

State  : 0
Stack  : . LexToken(IDENTIFIER,'search',20,562)
ERROR: Error  : . LexToken(IDENTIFIER,'search',20,562)

State  : 0
Stack  : . LexToken(RPAR,')',20,568)
ERROR: Error  : . LexToken(RPAR,')',20,568)

State  : 0
Stack  : . LexToken(LCURL,'{',20,570)
ERROR: Error  : . LexToken(LCURL,'{',20,570)

State  : 0
Stack  : . LexToken(IDENTIFIER,'System',21,588)
ERROR: Error  : . LexToken(IDENTIFIER,'System',21,588)

State  : 0
Stack  : . LexToken(POINT,'.',21,594)
ERROR: Error  : . LexToken(POINT,'.',21,594)

State  : 0
Stack  : . LexToken(IDENTIFIER,'out',21,595)
ERROR: Error  : . LexToken(IDENTIFIER,'out',21,595)

State  : 0
Stack  : . LexToken(POINT,'.',21,598)
ERROR: Error  : . LexToken(POINT,'.',21,598)

State  : 0
Stack  : . LexToken(IDENTIFIER,'println',21,599)
ERROR: Error  : . LexToken(IDENTIFIER,'println',21,599)

State  : 0
Stack  : . LexToken(LPAR,'(',21,606)
ERROR: Error  : . LexToken(LPAR,'(',21,606)

State  : 0
Stack  : . LexToken(IDENTIFIER,'search',21,607)
ERROR: Error  : . LexToken(IDENTIFIER,'search',21,607)

State  : 0
Stack  : . LexToken(PLUS,'+',21,614)
ERROR: Error  : . LexToken(PLUS,'+',21,614)

State  : 0
Stack  : . LexToken(STRINGVAL,'" found at location "',21,616)
ERROR: Error  : . LexToken(STRINGVAL,'" found at location "',21,616)

State  : 0
Stack  : . LexToken(PLUS,'+',21,638)
ERROR: Error  : . LexToken(PLUS,'+',21,638)

State  : 0
Stack  : . LexToken(LPAR,'(',21,640)
ERROR: Error  : . LexToken(LPAR,'(',21,640)

State  : 0
Stack  : . LexToken(IDENTIFIER,'middle',21,641)
ERROR: Error  : . LexToken(IDENTIFIER,'middle',21,641)

State  : 0
Stack  : . LexToken(PLUS,'+',21,648)
ERROR: Error  : . LexToken(PLUS,'+',21,648)

State  : 0
Stack  : . LexToken(INTVAL,'1',21,650)
ERROR: Error  : . LexToken(INTVAL,'1',21,650)

State  : 0
Stack  : . LexToken(RPAR,')',21,651)
ERROR: Error  : . LexToken(RPAR,')',21,651)

State  : 0
Stack  : . LexToken(PLUS,'+',21,653)
ERROR: Error  : . LexToken(PLUS,'+',21,653)

State  : 0
Stack  : . LexToken(STRINGVAL,'"."',21,655)
ERROR: Error  : . LexToken(STRINGVAL,'"."',21,655)

State  : 0
Stack  : . LexToken(RPAR,')',21,658)
ERROR: Error  : . LexToken(RPAR,')',21,658)

State  : 0
Stack  : . LexToken(SCOLON,';',21,659)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(BREAK,'break',22,677)
ERROR: Error  : SCOLON . LexToken(BREAK,'break',22,677)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(SCOLON,';',22,682)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(RCURL,'}',23,696)
ERROR: Error  : SCOLON . LexToken(RCURL,'}',23,696)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(ELSE,'else',23,698)
ERROR: Error  : . LexToken(ELSE,'else',23,698)

State  : 0
Stack  : . LexToken(IDENTIFIER,'last',24,719)
ERROR: Error  : . LexToken(IDENTIFIER,'last',24,719)

State  : 0
Stack  : . LexToken(EQ,'=',24,724)
ERROR: Error  : . LexToken(EQ,'=',24,724)

State  : 0
Stack  : . LexToken(IDENTIFIER,'middle',24,726)
ERROR: Error  : . LexToken(IDENTIFIER,'middle',24,726)

State  : 0
Stack  : . LexToken(MINUS,'-',24,733)
ERROR: Error  : . LexToken(MINUS,'-',24,733)

State  : 0
Stack  : . LexToken(INTVAL,'1',24,735)
ERROR: Error  : . LexToken(INTVAL,'1',24,735)

State  : 0
Stack  : . LexToken(SCOLON,';',24,736)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(IDENTIFIER,'middle',26,751)
ERROR: Error  : SCOLON . LexToken(IDENTIFIER,'middle',26,751)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(EQ,'=',26,758)
ERROR: Error  : . LexToken(EQ,'=',26,758)

State  : 0
Stack  : . LexToken(LPAR,'(',26,760)
ERROR: Error  : . LexToken(LPAR,'(',26,760)

State  : 0
Stack  : . LexToken(IDENTIFIER,'first',26,761)
ERROR: Error  : . LexToken(IDENTIFIER,'first',26,761)

State  : 0
Stack  : . LexToken(PLUS,'+',26,767)
ERROR: Error  : . LexToken(PLUS,'+',26,767)

State  : 0
Stack  : . LexToken(IDENTIFIER,'last',26,769)
ERROR: Error  : . LexToken(IDENTIFIER,'last',26,769)

State  : 0
Stack  : . LexToken(RPAR,')',26,773)
ERROR: Error  : . LexToken(RPAR,')',26,773)

State  : 0
Stack  : . LexToken(FSLASH,'/',26,775)
ERROR: Error  : . LexToken(FSLASH,'/',26,775)

State  : 0
Stack  : . LexToken(INTVAL,'2',26,777)
ERROR: Error  : . LexToken(INTVAL,'2',26,777)

State  : 0
Stack  : . LexToken(SCOLON,';',26,778)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(RCURL,'}',27,788)
ERROR: Error  : SCOLON . LexToken(RCURL,'}',27,788)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(IF,'if',28,798)
ERROR: Error  : . LexToken(IF,'if',28,798)

State  : 0
Stack  : . LexToken(LPAR,'(',28,801)
ERROR: Error  : . LexToken(LPAR,'(',28,801)

State  : 0
Stack  : . LexToken(IDENTIFIER,'first',28,802)
ERROR: Error  : . LexToken(IDENTIFIER,'first',28,802)

State  : 0
Stack  : . LexToken(GRTHAN,'>',28,808)
ERROR: Error  : . LexToken(GRTHAN,'>',28,808)

State  : 0
Stack  : . LexToken(IDENTIFIER,'last',28,810)
ERROR: Error  : . LexToken(IDENTIFIER,'last',28,810)

State  : 0
Stack  : . LexToken(RPAR,')',28,814)
ERROR: Error  : . LexToken(RPAR,')',28,814)

State  : 0
Stack  : . LexToken(IDENTIFIER,'System',29,828)
ERROR: Error  : . LexToken(IDENTIFIER,'System',29,828)

State  : 0
Stack  : . LexToken(POINT,'.',29,834)
ERROR: Error  : . LexToken(POINT,'.',29,834)

State  : 0
Stack  : . LexToken(IDENTIFIER,'out',29,835)
ERROR: Error  : . LexToken(IDENTIFIER,'out',29,835)

State  : 0
Stack  : . LexToken(POINT,'.',29,838)
ERROR: Error  : . LexToken(POINT,'.',29,838)

State  : 0
Stack  : . LexToken(IDENTIFIER,'println',29,839)
ERROR: Error  : . LexToken(IDENTIFIER,'println',29,839)

State  : 0
Stack  : . LexToken(LPAR,'(',29,846)
ERROR: Error  : . LexToken(LPAR,'(',29,846)

State  : 0
Stack  : . LexToken(IDENTIFIER,'search',29,847)
ERROR: Error  : . LexToken(IDENTIFIER,'search',29,847)

State  : 0
Stack  : . LexToken(PLUS,'+',29,854)
ERROR: Error  : . LexToken(PLUS,'+',29,854)

State  : 0
Stack  : . LexToken(STRINGVAL,'" isn\'t present in the list.\\n"',29,856)
ERROR: Error  : . LexToken(STRINGVAL,'" isn\'t present in the list.\\n"',29,856)

State  : 0
Stack  : . LexToken(RPAR,')',29,887)
ERROR: Error  : . LexToken(RPAR,')',29,887)

State  : 0
Stack  : . LexToken(SCOLON,';',29,888)
Action : Shift and goto state 8

State  : 8
Stack  : SCOLON . LexToken(RCURL,'}',30,894)
ERROR: Error  : SCOLON . LexToken(RCURL,'}',30,894)

State  : 8
Stack  : SCOLON . error
ERROR: Error  : SCOLON . error

State  : 0
Stack  : . error
ERROR: Error  : . error

State  : 0
Stack  : . LexToken(RCURL,'}',31,896)
ERROR: Error  : . LexToken(RCURL,'}',31,896)

State  : 0
Stack  : . $end
Action : Reduce rule [empty -> <empty>] with [] and goto state 6
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 6
Defaulted state 6: Reduce using 51
Stack  : empty . $end
Action : Reduce rule [CompilationUnit -> empty] with [None] and goto state 2
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 2
Defaulted state 2: Reduce using 1
Stack  : CompilationUnit . $end
Action : Reduce rule [Start -> CompilationUnit] with [None] and goto state 1
Result : <NoneType @ 0x563e7e3a60f0> (None)

State  : 1
Stack  : Start . $end
Done   : Returning <NoneType @ 0x563e7e3a60f0> (None)
PLY: PARSE DEBUG END
